Exp 5 : Write an X86/64 ALP to count number of positive and negative numbers from the
array.






section .data
welmsg db 10,'Welcome to count +ve and -ve numbers in an array',10
welmsg_len equ $-welmsg

pmsg db 10,'Count of +ve numbers::'
pmsg_len equ $-pmsg
nmsg db 10,'Count of -ve numbers::'
nmsg_len equ $-nmsg

nwline db 10

array dw 10,-20,30,-40,50

arrcnt equ 5

pcnt db 0
ncnt db 0
section .bss
dispbuff resb 2
%macro print 2
mov eax, 4
mov ebx, 1
mov ecx, %1
mov edx, %2
int 80h
%endmacro

section .text
global _start
_start:
print welmsg,welmsg_len
mov esi, array
mov ecx, arrcnt
up1:
bt word[esi], 15
jnc pnxt
inc byte[ncnt]
jmp pskip
pnxt:inc byte[pcnt]
pskip:inc esi
inc esi
loop up1
print pmsg,pmsg_len
mov bl,[pcnt]
call disp8num
print nmsg,nmsg_len
mov bl,[ncnt]
call disp8num
print nwline,1; New line char
exit:
mov eax, 01
mov ebx, 0
int 80h
disp8num:
mov ecx, 2;Number digits to display
mov edi, dispbuff;Temp buffer
dup1:
rol bl,4; Rotate number from bl to get MS digit to LS digit
mov al,bl; Move rotated number to AL
and al,0fh ;Mask upper digit
cmp al,09
jbe dskip
add al,07h; Else first add 07h
dskip: add al,30h;Add
mov [edi],al;
inc edi
loop dup1
print dispbuff,2
ret



OUTPUT:
student@student:~$ nasm -f elf64 ass5.nasm
student@student:~$ ld ass5.o
student@student:~$ ./a.out

Welcome to count +ve and -ve numbers in an array

Count of +ve numbers::03
Count of -ve numbers::02

